{"version":3,"sources":["services/api.js","context/PokemonContext.js","pages/HomeElements.js","components/HeaderElements.js","components/Header.js","components/ButtonsPanelElements.js","components/ButtonElements.js","components/Button.js","components/ButtonsPanel.js","components/PokedexElements.js","components/Pokedex.js","pages/Home.js","pages/PokemonDetailsElements.js","pages/PokemonDetails.js","pages/AboutElements.js","pages/About.js","images/error404.jpg","pages/NotFound.js","globalStyles.js","App.js","index.js"],"names":["getPokemonTypes","a","fetch","then","response","json","results","getPokemonsByType","url","pokemonsObj","getPokemonById","pokemonObj","PokemonContext","createContext","PokemonProvider","children","useState","pokemonTypes","setPokemonTypes","pokemon","setPokemon","useEffect","types","fetchData","contextValue","fetchPokemon","Provider","value","HomeContainer","styled","div","HeaderContainer","header","Header","to","ButtonsPanelContainer","section","GenericButton","button","gridless","Button","onClick","ButtonsPanel","fetchPokemons","map","name","PokemonsContainer","PokemonBox","Pokedex","pokemons","useContext","Home","setPokemons","DetailsContainer","main","AbilitiesGrid","PokemonDetails","locations","setLocations","fetched","setFetched","fetchLocations","location_area_encounters","console","log","locationsArray","Object","keys","length","src","sprites","front_default","alt","height","weight","abilities","ability","moves","move","type","location_area","ContentSection","About","NotFound","className","image","href","GlobalStyle","createGlobalStyle","App","exact","path","component","Favorites","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAaA,EAAe,uCAAG,8BAAAC,EAAA,sEACHC,MAAM,mCAC7BC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAFF,uBACrBC,EADqB,EACrBA,QADqB,kBAGtBA,GAHsB,2CAAH,qDAMfC,EAAiB,uCAAG,WAAOC,GAAP,eAAAP,EAAA,sEACLC,MAAMM,GAC7BL,MAAK,SAACC,GAAD,OAAcA,EAASC,UAFA,cACzBI,EADyB,yBAGxBA,GAHwB,2CAAH,sDAMjBC,EAAc,uCAAG,WAAOF,GAAP,eAAAP,EAAA,sEACHC,MAAMM,GAC5BL,MAAK,SAACC,GAAD,OAAcA,EAASC,UAFH,cACtBM,EADsB,yBAGrBA,GAHqB,2CAAH,sD,OCRrBC,EAAiBC,0BAEvB,SAASC,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SAAY,EACGC,mBAAS,IADZ,mBAC9BC,EAD8B,KAChBC,EADgB,OAEPF,mBAAS,IAFF,mBAE9BG,EAF8B,KAErBC,EAFqB,iDAYrC,WAA4BZ,GAA5B,eAAAP,EAAA,sEAC2BS,EAAeF,GAD1C,OACQG,EADR,OAEES,EAAWT,GAFb,4CAZqC,sBAIrCU,qBAAU,YACO,uCAAG,4BAAApB,EAAA,sEACID,IADJ,OACVsB,EADU,OAEhBJ,EAAgBI,GAFA,2CAAH,qDAIfC,KACC,IAOH,IAAMC,EAAe,CACnBP,eACAE,UACAM,aApBmC,6CAuBrC,OACE,cAACb,EAAec,SAAhB,CAAyBC,MAAQH,EAAjC,SACIT,I,6BCrBOa,EAROC,IAAOC,IAAV,2GCmCJC,EAnCSF,IAAOG,OAAV,ogBCiBNC,I,IAAAA,EAff,WACE,OACE,eAAC,EAAD,WACE,8BACE,gDAEF,gCACE,cAAC,IAAD,CAAMC,GAAG,WAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,0BCJOC,EANeN,IAAOO,QAAV,oHCgBZC,EAhBOR,IAAOS,OAAV,+QASR,qBAAGC,SAA2B,MAAQ,UCSlCC,EAhBA,SAAC,GAAD,IAAGzB,EAAH,EAAGA,SAAU0B,EAAb,EAAaA,QAASjC,EAAtB,EAAsBA,IAAK+B,EAA3B,EAA2BA,SAA3B,OACb,cAAC,EAAD,CACEE,QAAU,kBAAMA,EAAQjC,IACxB+B,SAAWA,EAFb,SAIGxB,KCiBU2B,I,IAAAA,EArBf,YAAwD,IAAhCzB,EAA+B,EAA/BA,aAAc0B,EAAiB,EAAjBA,cACpC,OACE,cAAC,EAAD,UACG1B,EAAa2B,KAAI,gBAAGC,EAAH,EAAGA,KAAMrC,EAAT,EAASA,IAAT,OAChB,cAAC,EAAD,CAEEA,IAAMA,EACNiC,QAAUE,EAHZ,SAKIE,GAJIA,SCRHC,EAAoBjB,IAAOO,QAAV,mJAOjBW,EAAalB,IAAOC,IAAV,oECyBRkB,MA3Bf,YAA6C,IAAd7B,EAAa,EAAzB8B,SAAY9B,QACrBM,EAAiByB,qBAAWtC,GAA5Ba,aAER,OAAKN,EAEH,qCACE,4CACA,cAAC2B,EAAD,UACG3B,EAAQyB,KAAI,oBAAGzB,QAAW0B,EAAd,EAAcA,KAAMrC,EAApB,EAAoBA,IAApB,OACX,eAACuC,EAAD,WACE,4BAAIF,IACJ,cAAC,IAAD,CAAMX,GAAG,2BAAT,SACE,cAAC,EAAD,CAAQ1B,IAAMA,EAAMiC,QAAUhB,EAA9B,0BAHcoB,WANL,kDCqBRM,I,IAAAA,EAvBf,WAAiB,IACPlC,EAAiBiC,qBAAWtC,GAA5BK,aADM,EAEkBD,mBAAS,IAF3B,mBAEPiC,EAFO,KAEGG,EAFH,KAIRT,EAAa,uCAAG,WAAOnC,GAAP,eAAAP,EAAA,sEACMM,EAAkBC,GADxB,OACdC,EADc,OAEpB2C,EAAY3C,GAFQ,2CAAH,sDAKnB,OAAKQ,EAEH,eAAC,EAAD,WACE,cAAC,EAAD,IACA,iCACE,kCACE,cAAC,EAAD,CAAcA,aAAeA,EAAe0B,cAAgBA,MAE9D,cAAC,EAAD,CAASM,SAAWA,UARA,+CCffI,EAAmBxB,IAAOyB,KAAV,6KAahBC,EAAgB1B,IAAOC,IAAV,yLC4CX0B,I,EAAAA,EArDf,WAA2B,IAAD,EACUxC,mBAAS,IADnB,mBACjByC,EADiB,KACNC,EADM,OAEM1C,oBAAS,GAFf,mBAEjB2C,EAFiB,KAERC,EAFQ,KAGhBzC,EAAY+B,qBAAWtC,GAAvBO,QAEF0C,EAAc,uCAAG,8BAAA5D,EAAA,6DACfO,EAAMW,EAAQ2C,yBACpBC,QAAQC,IAAIxD,GAFS,SAGQN,MAAMM,GAAKL,MAAK,SAACC,GAAD,OAAcA,EAASC,UAH/C,OAGf4D,EAHe,OAIrBF,QAAQC,IAAIC,GACZP,EAAaO,GACbL,GAAW,GANU,2CAAH,qDASpB,OAAoC,IAAhCM,OAAOC,KAAKhD,GAASiD,OAAqB,uDAG5C,qCACE,cAAC,EAAD,IACA,eAACf,EAAD,WACE,6BAAMlC,EAAQ0B,OACd,qBAAKwB,IAAMlD,EAAQmD,QAAQC,cAAgBC,IAAG,UAAMrD,EAAQ0B,KAAd,aAC9C,8CAAgB1B,EAAQsD,UACxB,4CAActD,EAAQuD,OAAtB,aACA,6CACA,cAACnB,EAAD,UACGpC,EAAQwD,UAAU/B,KAAI,gBAAcC,EAAd,EAAG+B,QAAW/B,KAAd,OACrB,4BAAiBA,GAARA,QAGb,4CACA,cAACU,EAAD,UACGpC,EAAQ0D,MAAMjC,KAAI,gBAAWC,EAAX,EAAGiC,KAAQjC,KAAX,OACjB,4BAAiBA,GAARA,QAGb,cAAC,EAAD,CACEkC,KAAK,SACLtC,QAAUoB,EACVtB,UAAQ,EAHV,kDAQuB,IAArBkB,EAAUW,QAAgBT,EACtB,oFACAF,EAAUb,KAAI,gBAAoBC,EAApB,EAAGmC,cAAiBnC,KAApB,OAAiC,4BAAiBA,GAARA,aC9CvDoC,EAJQpD,IAAOO,QAAV,uECqBL8C,MAnBf,WACE,OACE,qCACE,cAAC,EAAD,IACA,eAAC,EAAD,WACE,kDACA,2HAGA,gHACA,qBACEb,IAAI,oGACJG,IAAI,mBChBC,MAA0B,qCCiB1BW,I,EAAAA,EAbf,WACE,OACE,qCACE,cAAC,EAAD,IACA,2EACA,qBAAKC,UAAU,gBAAf,SACE,qBAAKf,IAAMgB,EAAQb,IAAI,gBAEzB,mBAAGc,KAAK,0CAAR,oE,iBCOSC,EAjBKC,YAAH,6TCsBFC,MAff,WACE,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAYzC,IACzC,cAAC,IAAD,CAAOwC,KAAK,2BAA2BC,UAAYpC,IACnD,cAAC,IAAD,CAAOmC,KAAK,iBAAiBC,UAAYV,IACzC,cAAC,IAAD,CAAOS,KAAK,qBAAqBC,UAAYC,MAC7C,cAAC,IAAD,CAAOD,UAAYT,WCZ3BW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.f93f1def.chunk.js","sourcesContent":["export const getPokemonTypes = async () => {\n  const { results } = await fetch('https://pokeapi.co/api/v2/type/')\n    .then((response) => response.json());\n  return results;\n};\n\nexport const getPokemonsByType = async (url) => {\n  const pokemonsObj = await fetch(url)\n    .then((response) => response.json());\n  return pokemonsObj;\n};\n\nexport const getPokemonById = async (url) => {\n  const pokemonObj = await fetch(url)\n    .then((response) => response.json());\n  return pokemonObj;\n};\n","import React, { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPokemonTypes, getPokemonById } from '../services/api';\n\nconst PokemonContext = createContext();\n\nfunction PokemonProvider({ children }) {\n  const [pokemonTypes, setPokemonTypes] = useState([]);\n  const [pokemon, setPokemon] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const types = await getPokemonTypes();\n      setPokemonTypes(types);\n    };\n    fetchData();\n  }, []);\n\n  async function fetchPokemon(url) {\n    const pokemonObj = await getPokemonById(url);\n    setPokemon(pokemonObj);\n  }\n\n  const contextValue = {\n    pokemonTypes,\n    pokemon,\n    fetchPokemon,\n  };\n\n  return (\n    <PokemonContext.Provider value={ contextValue }>\n      { children }\n    </PokemonContext.Provider>\n  );\n}\n\nPokemonProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport {\n  PokemonContext,\n  PokemonProvider as Provider,\n};\n","import styled from 'styled-components';\n\nconst HomeContainer = styled.div` text-align: center;\n\n  main {\n    display: block;\n    flex: 1 0 auto;\n  }\n`;\n\nexport default HomeContainer;\n","import styled from 'styled-components';\n\nconst HeaderContainer = styled.header` text-align: center;\n\n  div {\n    background: red;\n    box-shadow: 2px 5px 5px gray;\n    color: white;\n    height: 70px;\n    margin-bottom: 15px;\n    padding: 15px;\n    text-align: center;\n  }\n\n  h1 {\n    text-shadow: 2px 5px 5px gray;\n  }\n\n  nav {\n    margin: 1em;\n  }\n\n  a {\n    margin: 0 1em;\n    opacity: 0.7;\n    text-decoration: none;\n\n    &:link , &:visited , &:hover , &:active {\n      color: black;\n    }\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default HeaderContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderContainer from './HeaderElements';\n\nfunction Header() {\n  return (\n    <HeaderContainer>\n      <div>\n        <h1> Pok√©dex </h1>\n      </div>\n      <nav>\n        <Link to=\"/pokedex\">Home</Link>\n        <Link to=\"/pokedex/about\">About</Link>\n        {/* <Link to=\"/favorites\">Favorites</Link> */}\n      </nav>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst ButtonsPanelContainer = styled.section` display: grid;\n  gap: 1em;\n  grid-template-columns: repeat(5, 1fr);\n  margin: 0 1em;\n`;\n\nexport default ButtonsPanelContainer;\n","import styled from 'styled-components';\n\nconst GenericButton = styled.button` background-color: orange;\n  color: white;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 600;\n  opacity: 0.8;\n  padding: 1em;\n  text-align: center;\n  text-transform: uppercase;\n  width: ${({ gridless }) => (gridless ? '30%' : '100%')};\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport default GenericButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GenericButton from './ButtonElements';\n\nconst Button = ({ children, onClick, url, gridless }) => (\n  <GenericButton\n    onClick={ () => onClick(url) }\n    gridless={ gridless }\n  >\n    {children}\n  </GenericButton>\n);\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n  url: PropTypes.string.isRequired,\n  gridless: PropTypes.bool.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonsPanelContainer from './ButtonsPanelElements';\nimport Button from './Button';\n\nfunction ButtonsPanel({ pokemonTypes, fetchPokemons }) {\n  return (\n    <ButtonsPanelContainer>\n      {pokemonTypes.map(({ name, url }) => (\n        <Button\n          key={ name }\n          url={ url }\n          onClick={ fetchPokemons }\n        >\n          { name }\n        </Button>\n      ))}\n    </ButtonsPanelContainer>\n  );\n}\n\nButtonsPanel.propTypes = {\n  pokemonTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  fetchPokemons: PropTypes.func.isRequired,\n};\n\nexport default ButtonsPanel;\n","import styled from 'styled-components';\n\nexport const PokemonsContainer = styled.section` display: grid;\n  gap: 1em;\n  grid-template-columns: repeat(5, 1fr);\n  margin: 0 1em;\n  text-transform: capitalize;\n`;\n\nexport const PokemonBox = styled.div` border: 1px solid red;\n  padding: 1em;\n`;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { PokemonContext } from '../context/PokemonContext';\nimport { PokemonsContainer, PokemonBox } from './PokedexElements';\nimport Button from './Button';\n\nfunction Pokedex({ pokemons: { pokemon } }) {\n  const { fetchPokemon } = useContext(PokemonContext);\n\n  if (!pokemon) return <p>Selecione o Tipo</p>;\n  return (\n    <>\n      <p>Pok√©mons</p>\n      <PokemonsContainer>\n        {pokemon.map(({ pokemon: { name, url } }) => (\n          <PokemonBox key={ name }>\n            <p>{name}</p>\n            <Link to=\"/pokedex/pokemon/details\">\n              <Button url={ url } onClick={ fetchPokemon }>Detalhes</Button>\n            </Link>\n          </PokemonBox>\n        ))}\n      </PokemonsContainer>\n    </>\n  );\n}\n\nPokedex.propTypes = {\n  pokemons: PropTypes.shape({\n    pokemon: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default Pokedex;\n","import React, { useContext, useState } from 'react';\nimport { PokemonContext } from '../context/PokemonContext';\nimport { getPokemonsByType } from '../services/api';\nimport HomeContainer from './HomeElements';\nimport Header from '../components/Header';\nimport ButtonsPanel from '../components/ButtonsPanel';\nimport Pokedex from '../components/Pokedex';\n\nfunction Home() {\n  const { pokemonTypes } = useContext(PokemonContext);\n  const [pokemons, setPokemons] = useState({});\n\n  const fetchPokemons = async (url) => {\n    const pokemonsObj = await getPokemonsByType(url);\n    setPokemons(pokemonsObj);\n  };\n\n  if (!pokemonTypes) return <p>Carregando...</p>;\n  return (\n    <HomeContainer>\n      <Header />\n      <main>\n        <section>\n          <ButtonsPanel pokemonTypes={ pokemonTypes } fetchPokemons={ fetchPokemons } />\n        </section>\n        <Pokedex pokemons={ pokemons } />\n      </main>\n    </HomeContainer>\n  );\n}\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.main` min-height: 71vh;\n  text-align: center;\n\n  h3 {\n    font-size: 2rem;\n    text-transform: capitalize;\n  }\n\n  img {\n    width: 8rem;\n  }\n`;\n\nexport const AbilitiesGrid = styled.div` display: flex;\n  flex-wrap: wrap;\n  gap: 1em;\n  justify-content: center;\n  margin: 0 auto;\n  width: 80%;\n\n  p {\n    text-transform: capitalize;\n  }\n`;\n","import React, { useContext, useState } from 'react';\nimport { PokemonContext } from '../context/PokemonContext';\nimport { DetailsContainer, AbilitiesGrid } from './PokemonDetailsElements';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\n\nfunction PokemonDetails() {\n  const [locations, setLocations] = useState([]);\n  const [fetched, setFetched] = useState(false);\n  const { pokemon } = useContext(PokemonContext);\n\n  const fetchLocations = async () => {\n    const url = pokemon.location_area_encounters;\n    console.log(url);\n    const locationsArray = await fetch(url).then((response) => response.json());\n    console.log(locationsArray);\n    setLocations(locationsArray);\n    setFetched(true);\n  };\n\n  if (Object.keys(pokemon).length === 0) return <p>Carregando detalhes...</p>;\n\n  return (\n    <>\n      <Header />\n      <DetailsContainer>\n        <h3>{ pokemon.name }</h3>\n        <img src={ pokemon.sprites.front_default } alt={ `${pokemon.name} sprite` } />\n        <p>{ `Altura: ${pokemon.height}` }</p>\n        <p>{ `Peso: ${pokemon.weight} gramas` }</p>\n        <p>Abilidades: </p>\n        <AbilitiesGrid>\n          {pokemon.abilities.map(({ ability: { name } }) => (\n            <p key={ name }>{name}</p>\n          ))}\n        </AbilitiesGrid>\n        <p>Movimentos:</p>\n        <AbilitiesGrid>\n          {pokemon.moves.map(({ move: { name } }) => (\n            <p key={ name }>{name}</p>\n          ))}\n        </AbilitiesGrid>\n        <Button\n          type=\"button\"\n          onClick={ fetchLocations }\n          gridless\n        >\n          Mostrar Localiza√ß√µes nos Jogos\n        </Button>\n        {\n          locations.length === 0 && fetched\n            ? <p>Esse Pok√©mon n√£o possu√≠ localiza√ß√µes</p>\n            : locations.map(({ location_area: { name } }) => <p key={ name }>{name}</p>)\n        }\n      </DetailsContainer>\n    </>\n  );\n}\n\nexport default PokemonDetails;\n","import styled from 'styled-components';\n\nconst ContentSection = styled.section` min-height: 71.7vh;\n  text-align: center;\n`;\n\nexport default ContentSection;\n","import React from 'react';\nimport ContentSection from './AboutElements';\nimport Header from '../components/Header';\n\nfunction About() {\n  return (\n    <>\n      <Header />\n      <ContentSection>\n        <h3>About Pok√©dex</h3>\n        <p>\n          This is a simulated pokedex created as a exercise in the Trybe Software Delevopment Course\n        </p>\n        <p>It`&#39;`s possible to navigate throughout some pokemons and see details about them</p>\n        <img\n          src=\"https://cdn.bulbagarden.net/upload/thumb/8/86/Gen_I_Pok%C3%A9dex.png/800px-Gen_I_Pok%C3%A9dex.png\"\n          alt=\"Pokedex\"\n        />\n      </ContentSection>\n    </>\n  );\n}\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/error404.f57aa60e.jpg\";","import React from 'react';\nimport Header from '../components/Header';\nimport image from '../images/error404.jpg';\n\nfunction NotFound() {\n  return (\n    <>\n      <Header />\n      <h3>The page you are looking for do not exist</h3>\n      <div className=\"img-container\">\n        <img src={ image } alt=\"Error 404\" />\n      </div>\n      <a href=\"https://br.freepik.com/vetores/abstrato\">Vetor abstrato criado por freepik - br.freepik.com</a>\n    </>\n  );\n}\n\nexport default NotFound;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle` * , *:after , *:before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    text-decoration: none;\n  }\n\n  body {\n    display: flex;\n    flex-direction: column;\n    font-family: Roboto, sans-serif;\n    font-size: 100%;\n    height: 100%;\n    min-height: 100vh;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport PokemonDetails from './pages/PokemonDetails';\nimport About from './pages/About';\nimport NotFound from './pages/NotFound';\nimport Favorites from './pages/Favorites';\nimport GlobalStyle from './globalStyles';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Switch>\n        <Route exact path=\"/pokedex\" component={ Home } />\n        <Route path=\"/pokedex/pokemon/details\" component={ PokemonDetails } />\n        <Route path=\"/pokedex/about\" component={ About } />\n        <Route path=\"/pokedex/favorites\" component={ Favorites } />\n        <Route component={ NotFound } />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from './context/PokemonContext';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}